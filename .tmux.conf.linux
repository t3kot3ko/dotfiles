set-window-option -g mode-keys vi
set-window-option -g automatic-rename off

set -s escape-time 0
setw -g window-status-current-attr underscore


# 256C Colors
set-option -g default-terminal "screen-256color"

# ステータスラインカスタム関連
set -g status-bg black
set -g status-fg white
set -g status-attr dim
# set-option -g status-right

# set-option -g status-left-length 80
# set-option -g status-right-length 90
# set-option -g status-left "#(~/dotfiles/tmux-powerline/status-left.sh)#[bg=red]#[fg=black]#[bg=red]#[fg=white]  mem #(used-mem) %% #[bg=black]#[fg=red]"
# set-option -g status-right "#(~/dotfiles/tmux-powerline/status-right.sh)"

# Left: whoami@hostname
set -g status-left '#[fg=cyan,bold][#H No.#I-#P]#[default]'
set -g status-left-length 20

# Right: [192.168.1.123] [2011/03/06(Sun)20:21]
set -g status-right '#[fg=cyan,bold][#(echo `LANG=us_EN.UTF-8 ifconfig eth0 | grep "inet addr"  | sed -e "s/inet addr://g" | sed -e "s/ Bcast:.*//"`)] [%Y/%m/%d(%a)%H:%M]#[default]'

set -g message-attr bold
set -g message-fg red
set -g message-bg white

set -g pane-border-fg white
set -g pane-border-bg black
set -g pane-active-border-fg blue
set -g pane-active-border-bg black

set-window-option -g mode-bg white
set-window-option -g mode-fg black
set-window-option -g window-status-bg black
set-window-option -g window-status-fg white
set-window-option -g window-status-current-bg white
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-attr bold

# KeyBindings

# Set the prefix to ^T.
unbind C-b
set -g prefix ^T
bind t send-prefix

# Reload
unbind r
bind r source-file ~/.tmux.conf; display-message "Reload Config!!"

unbind .
bind . command-prompt "rename-window %%" 

# Create new window
unbind ^C
bind ^C new-window -n zsh
bind c new-window -n zsh

# Detach
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# Jump to last window t
unbind C-t
bind C-t last-window

# Previous window (^p)
unbind ^P
bind ^P previous-window

# Next window (N, n)
unbind ^N
bind ^N next-window
unbind n
bind n next-window

# Rename window (A)
unbind A
bind A command-prompt "rename-window %%"

# copy-mode y
unbind y
bind y copy-mode

# begin-selection
bind-key -Tcopy-mode-vi "v" send -X begin-selection

# copy-selection (end of selection)
bind-key -Tcopy-mode-vi "y" send -X copy-selection-and-cancel

# copy-line
bind-key -Tcopy-mode-vi "Y" send -X copy-line

# paste-buffer
unbind p
bind p paste-buffer

# other ^A
unbind ^A
bind ^A last-window

# man
unbind m
bind-key m command-prompt "split-window -p 65 'exec man %%'"

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \
unbind \
bind \ confirm-before "kill-server"


# Redisplay r
unbind ^R
bind ^R refresh-client

# Resize pane
bind < resize-pane -L 200
bind > resize-pane -R 200
bind - resize-pane -D 100
bind + resize-pane -U 100
bind -r h resize-pane -L 8
bind -r l resize-pane -R 8
bind -r j resize-pane -D 2
bind -r k resize-pane -U 2
bind -r s swap-pane -U

# Split horizontally
unbind ^S
bind ^S  split-window -v -c "#{pane_current_path}"

# Split vertically
unbind ^V
bind ^V  split-window -h -c "#{pane_current_path}"

# :kB: focus up
unbind ^J
bind ^J select-pane -D
unbind ^K
bind ^K select-pane -U
unbind ^H
bind ^H select-pane -L
unbind ^L
bind ^L select-pane -R

# Shared clipboard
bind-key > save-buffer ~/.tmux-buffer \; run-shell 'xsel -b -i < ~/.tmux-buffer' \; display-message "Copied to clipboard." 
bind-key < if-shell 'xsel -b -o > ~/.tmux-buffer' 'load-buffer ~/.tmux-buffer ; paste-buffer'

# Reload .zshrc
unbind ^r
bind ^r run-shell "source /home/tomoyuki/.zshrc" \; display-message "source .zshrc"

# Kill pane
unbind X
bind X kill-pane

# Kill window
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"
