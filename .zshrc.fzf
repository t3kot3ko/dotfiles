## ghq
function fzf-src () {
  local selected_dir=$(ghq list -p | fzf --query "$LBUFFER")
  if [ -n "$selected_dir" ]; then
    BUFFER="cd ${selected_dir}"
    zle accept-line
  fi
  zle clear-screen
}
zle -N fzf-src
bindkey '^]' fzf-src

## Select git branch (global alias)
### local branches
alias -g B='`git branch | fzf | sed -e "s/^\*[ ]*//g"`'
### all branches (including remote branches)
alias -g BB='`git branch -a | fzf | sed -e "s/^\*[ ]*//g"`'

## Select history
function fzf-select-history() {
    BUFFER=$(fc -l -r -n 1 | fzf --query "$LBUFFER" --prompt "History > ")
    CURSOR=$#BUFFER
    zle redisplay
}
zle -N fzf-select-history
bindkey '^r' fzf-select-history

## Find file
function fzf-find-file() {
    if git rev-parse 2> /dev/null; then
        command="git ls-files"
    else
        command="find . -type f"
    fi
    # selected_files=$(echo $source_files | fzf --prompt "Files > ")
    selected_files=$(eval $command | fzf --prompt "Files > ")

    # BUFFER="${BUFFER}${echo $selected_files | tr '\n' ' '}"
    BUFFER="${BUFFER}$selected_files"
    CURSOR=$#BUFFER
    zle redisplay
}
zle -N fzf-find-file
bindkey '^q' fzf-find-file

## SSH
#
function fzf-ssh () {
	local selected_host=$(awk '
	tolower($1)=="host" {
		for (i=2; i<=NF; i++) {
			if ($i !~ "[*?]") {
				print $i
			}
		}
	}
  ' ~/.ssh/config | sort | fzf --query "$LBUFFER")
	if [ -n "$selected_host" ]; then
		BUFFER="ssh ${selected_host}"
		zle accept-line
	fi
	zle clear-screen
}
zle -N fzf-ssh
bindkey '^\' fzf-ssh

