## Use fzf-tmux instead of fzf
alias fzf=fzf-tmux

## Colorscheme
export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'
--color=dark
--color=fg:-1,bg:-1,hl:#5fff87,fg+:-1,bg+:-1,hl+:#ffaf5f
--color=info:#af87ff,prompt:#5fff87,pointer:#ff87d7,marker:#ff87d7,spinner:#ff87d7
'

## ghq
function fzf-src () {
  local selected_dir=$(ghq list -p | fzf --query "$LBUFFER")
  if [ -n "$selected_dir" ]; then
    BUFFER="cd ${selected_dir}"
    zle accept-line
  fi
  zle clear-screen
}
zle -N fzf-src
bindkey '^]' fzf-src

function fzf-src-show () {
  local selected_dir=$(ghq list -p | fzf )
  if [ -n "$selected_dir" ]; then
    BUFFER="$LBUFFER${selected_dir}"
    CURSOR=$#BUFFER
  fi
}
zle -N fzf-src-show
bindkey '^G^R' fzf-src-show

## Select git branch (global alias)
### local branches
alias -g B='`git branch | fzf | sed -e "s/^\*[ ]*//g"`'
### all branches (including remote branches)
alias -g BB='`git branch -a | fzf | sed -e "s/^\*[ ]*//g"`'
### list modified files
alias -g F='`git status --short | fzf -m | cut -d" " -f3`'

## Select history
function fzf-select-history() {
    BUFFER=$(fc -l -r -n 1 | fzf --query "$LBUFFER" --prompt "History > ")
    CURSOR=$#BUFFER
    zle redisplay
}
zle -N fzf-select-history
bindkey '^r' fzf-select-history

## Find file
function fzf-find-file() {
    if git rev-parse 2> /dev/null; then
        command="git ls-files"
    else
        command="find . -type f"
    fi
    # selected_files=$(echo $source_files | fzf --prompt "Files > ")
    selected_files=$(eval $command | fzf --prompt "Files > ")

    # BUFFER="${BUFFER}${echo $selected_files | tr '\n' ' '}"
    BUFFER="${BUFFER}$selected_files"
    CURSOR=$#BUFFER
    zle redisplay
}
zle -N fzf-find-file
bindkey '^q' fzf-find-file

function fzf-ls-file() {
    # selected_files=$(echo $source_files | fzf --prompt "Files > ")
    selected_files=$(ls  | fzf --prompt "Files > ")

    # BUFFER="${BUFFER}${echo $selected_files | tr '\n' ' '}"
    BUFFER="${BUFFER}$selected_files"
    CURSOR=$#BUFFER
    zle redisplay
}
zle -N fzf-ls-file
bindkey '^l^s' fzf-ls-file

## Find directory
function fzf-find-dir() {
    selected_dirs=$(find . -type d | fzf --prompt "Dirs > ")

    # BUFFER="${BUFFER}${echo $selected_files | tr '\n' ' '}"
    BUFFER="${BUFFER}$selected_dirs"
    CURSOR=$#BUFFER
    zle redisplay
}
zle -N fzf-find-dir
bindkey '^w' fzf-find-dir


## SSH
#
function fzf-ssh () {
	local selected_host=$(awk '
	tolower($1)=="host" {
		for (i=2; i<=NF; i++) {
			if ($i !~ "[*?]") {
				print $i
			}
		}
	}
  ' ~/.ssh/config | sort | fzf --query "$LBUFFER" --prompt "SSH to: ")
	if [ -n "$selected_host" ]; then
		BUFFER="ssh ${selected_host}"
		zle accept-line
	fi
	zle clear-screen
}
zle -N fzf-ssh
bindkey '^s' fzf-ssh


## Select history
function fzf-kill() {
    BUFFER=$(ps aux | fzf -m | awk '{print $2}' | xargs kill -9)
    CURSOR=$#BUFFER
    zle redisplay
}
zle -N fzf-kill
bindkey '^k^k' fzf-kill

alias -g ADB='`adb devices | grep -v "List of devices" | egrep -v "^\s*$" | fzf --prompt="Device ID>"  | sed "s/device//g"`'


