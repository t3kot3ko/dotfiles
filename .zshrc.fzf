## Use fzf-tmux instead of fzf
alias fzf=fzf-tmux

## Colorscheme
export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'
--color=dark
--color=fg:-1,bg:-1,hl:#569fba 
--color=fg+:-1,bg+:-1,hl+:#65b1cd 
--color=info:#f6c177,prompt:#65b1cd,pointer:#a6dae3 
--color=marker:#b1d196,spinner:#ccb1ed,header:#a3be8c'

## files
function show_buffer_stack() {
	POSTDISPLAY="
	stack: $LBUFFER"
	zle push-line-or-edit
}
zle -N show_buffer_stack
setopt noflowcontrol
bindkey '^Q' show_buffer_stack

## ghq
function fzf-src () {
  local selected_dir=$(ghq list -p | fzf --query "$LBUFFER")
  if [ -n "$selected_dir" ]; then
    BUFFER="cd ${selected_dir}"
    zle accept-line
  fi
  zle clear-screen
}
zle -N fzf-src
bindkey '^]' fzf-src

function fzf-src-show () {
  local selected_dir=$(ghq list -p | fzf )
  if [ -n "$selected_dir" ]; then
    BUFFER="$LBUFFER${selected_dir}$RBUFFER"
    CURSOR=$#BUFFER
  fi
}
zle -N fzf-src-show
bindkey '^lr' fzf-src-show


function fzf-git-branch () {
  local selected_dir=$(git branch | grep -v "*" | grep -v "\->" | sed -e "s/^[ ]*//g" | fzf )
  if [ -n "$selected_dir" ]; then
    BUFFER="$LBUFFER${selected_dir}"
    CURSOR=$#BUFFER
  fi
}
zle -N fzf-git-branch
bindkey '^lb' fzf-git-branch

function fzf-git-branch-all () {
  local selected_dir=$(git branch -a | grep -v "*" | grep -v "\->" | sed -e "s/^[ ]*//g" | fzf )
  if [ -n "$selected_dir" ]; then
    BUFFER="$LBUFFER${selected_dir}"
    CURSOR=$#BUFFER
  fi
}
zle -N fzf-git-branch-all
bindkey '^lB' fzf-git-branch-all


function fzf-git-checkout() {
  local selected=$(git branch -a | grep -v '*' | sed -e "s/^\*[ ]*//g" | fzf)
  
  if git rev-parse 2> /dev/null; then
    if [ -n "$selected" ]; then
      BUFFER="git checkout ${selected}"
      zle accept-line
    fi
    zle clear-screen
  fi
}
zle -N fzf-git-checkout
bindkey '^kc' fzf-git-checkout

function fzf-git-cd-submodule () {
  local selected=$(git submodule | fzf)
  local dir=$(echo $selected | cut -d " " -f3)
  if git rev-parse 2> /dev/null; then
    if [ -n "$dir" ]; then
      cd ${dir}
      zle accept-line
    fi
    zle clear-screen
  fi
}
zle -N fzf-git-cd-submodule
bindkey '^ks' fzf-git-cd-submodule

## Select history
function fzf-select-history() {
    BUFFER=$(fc -l -r -n 1 | fzf --query "$LBUFFER" --prompt "History > ")
    CURSOR=$#BUFFER
    zle redisplay
}
zle -N fzf-select-history
bindkey '^r' fzf-select-history

bindkey '^p' history-beginning-search-backward
bindkey '^n' history-beginning-search-forward
bindkey '^S' history-incremental-pattern-search-forward
bindkey '^s' history-incremental-pattern-search-forward

## Find file
function fzf-find-file() {
    if git rev-parse 2> /dev/null; then
        command="git ls-files"
    else
        command="find . -type f"
    fi
    # selected_files=$(echo $source_files | fzf --prompt "Files > ")
    selected_files=$(eval $command | fzf --prompt "Files > ")

    # BUFFER="${BUFFER}${echo $selected_files | tr '\n' ' '}"
    BUFFER="${BUFFER}$selected_files"
    CURSOR=$#BUFFER
    zle redisplay
}
zle -N fzf-find-file
bindkey '^q' fzf-find-file

function fzf-ls-file() {
    # selected_files=$(echo $source_files | fzf --prompt "Files > ")
    selected_files=$(ls  | fzf --prompt "Files > ")

    # BUFFER="${BUFFER}${echo $selected_files | tr '\n' ' '}"
    BUFFER="${BUFFER}$selected_files"
    CURSOR=$#BUFFER
    zle redisplay
}
zle -N fzf-ls-file
bindkey '^ls' fzf-ls-file

## Find directory
function fzf-find-dir() {
    selected_dirs=$(find . -type d | fzf --prompt "Dirs > ")

    # BUFFER="${BUFFER}${echo $selected_files | tr '\n' ' '}"
    BUFFER="${BUFFER}$selected_dirs"
    CURSOR=$#BUFFER
    zle redisplay
}
zle -N fzf-find-dir
bindkey '^w' fzf-find-dir


## SSH
#
function fzf-ssh () {
  local selected_host=$(awk '
  tolower($1)=="host" {
    for (i=2; i<=NF; i++) {
      if ($i !~ "[*?]") {
        print $i
      }
    }
  }
  ' ~/.ssh/config | sort | fzf --query "$LBUFFER" --prompt "SSH to: ")
  if [ -n "$selected_host" ]; then
    BUFFER="ssh ${selected_host}"
    zle accept-line
  fi
  zle clear-screen
}
zle -N fzf-ssh
bindkey '^s' fzf-ssh


## Select history
function fzf-kill() {
    BUFFER=$(ps aux | fzf -m | awk '{print $2}' | xargs kill -9)
    CURSOR=$#BUFFER
    zle redisplay
}
zle -N fzf-kill
bindkey '^k^k' fzf-kill

function fzf-select-docker-container() {
  selected=$(docker container ls | fzf --reverse --multi --header-lines=1 | awk '{print $1}')
  BUFFER="$LBUFFER${selected}"
  CURSOR=$#BUFFER
  zle redisplay

}
zle -N fzf-select-docker-container
bindkey '^lc' fzf-select-docker-container

function fzf-cdr() {
    local selected_dir=$(cdr -l | awk '{ print $2 }' | fzf)
    if [ -n "$selected_dir" ]; then
        BUFFER="cd ${selected_dir}"
        zle accept-line
    fi
    zle clear-screen
}
zle -N fzf-cdr
bindkey '^lh' fzf-cdr

function paste-current-git-branch() {
    local branch_name
    branch_name=$(git branch --show-current 2>/dev/null)
    if [ -n "$branch_name" ]; then
        BUFFER="$LBUFFER${branch_name}"
        CURSOR=$#BUFFER
    fi
}
zle -N paste-current-git-branch
bindkey '^kb' paste-current-git-branch
